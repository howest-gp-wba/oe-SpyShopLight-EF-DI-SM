// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Wba.SpyshopActual.Web.Data;

namespace Wba.SpyshopActual.Web.Migrations
{
    [DbContext(typeof(SpyShopContext))]
    partial class SpyShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Wba.SpyshopActual.Domain.Entitys.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new { Id = 1, Name = "Cameras" },
                        new { Id = 2, Name = "Communication" }
                    );
                });

            modelBuilder.Entity("Wba.SpyshopActual.Domain.Entitys.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<string>("PhotoUrl");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<int?>("SortNumber");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new { Id = 1, CategoryId = 1, Description = "SpyWatch", Name = "Spywatch", PhotoUrl = "watch.jpg", Price = 39.95m },
                        new { Id = 2, CategoryId = 2, Description = "Pencil", Name = "Comminication Pencil", PhotoUrl = "pencil.jpg", Price = 9.95m },
                        new { Id = 3, CategoryId = 2, Description = "Mustache", Name = "Mustasch Translator", PhotoUrl = "stash.jpg", Price = 9.95m },
                        new { Id = 4, CategoryId = 2, Description = "Batteries", Name = "Batteries", PhotoUrl = "batteries.jpg", Price = 10.95m }
                    );
                });

            modelBuilder.Entity("Wba.SpyshopActual.Domain.Entitys.Product", b =>
                {
                    b.HasOne("Wba.SpyshopActual.Domain.Entitys.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
